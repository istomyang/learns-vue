[
  {
    "uri": "istomyang/express",
    "content": "<div id=\"readme\" class=\"md\" data-path=\"Readme.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><p><a href=\"http://expressjs.com/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/0566752248b4b31b2c4bdc583404e41066bd0b6726f310b73e1140deefcc31ac/68747470733a2f2f692e636c6f756475702e636f6d2f7a6659366c4c376546612d3330303078333030302e706e67\" alt=\"Express Logo\" data-canonical-src=\"https://i.cloudup.com/zfY6lL7eFa-3000x3000.png\" style=\"max-width:100%;\"></a></p>\n<p>Fast, unopinionated, minimalist web framework for <a href=\"http://nodejs.org\" rel=\"nofollow\">node</a>.</p>\n<p><a href=\"https://npmjs.org/package/express\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/ae5c26794bd2361513919f6e0c2bf368b5ac0ca1af9b2614d02358ccfa6f0e55/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f657870726573732e737667\" alt=\"NPM Version\" data-canonical-src=\"https://img.shields.io/npm/v/express.svg\" style=\"max-width:100%;\"></a>\n<a href=\"https://npmcharts.com/compare/express?minimal=true\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/2ade0e3a629d2f478e5bfd0f651d5e8e3aa27a9ad3a4acac70adf38bb0e3069b/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f646d2f657870726573732e737667\" alt=\"NPM Downloads\" data-canonical-src=\"https://img.shields.io/npm/dm/express.svg\" style=\"max-width:100%;\"></a>\n<a href=\"https://travis-ci.org/expressjs/express\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/7605a497fa6ce16db92e44ba4091b4cac7d15fa6cd921b1c734e7d619fbda53b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f657870726573736a732f657870726573732f6d61737465722e7376673f6c6162656c3d6c696e7578\" alt=\"Linux Build\" data-canonical-src=\"https://img.shields.io/travis/expressjs/express/master.svg?label=linux\" style=\"max-width:100%;\"></a>\n<a href=\"https://ci.appveyor.com/project/dougwilson/express\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/1267e54c94d328e36931368b3031a0d915d2ba6965317b472aff1646df4e4063/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f646f756777696c736f6e2f657870726573732f6d61737465722e7376673f6c6162656c3d77696e646f7773\" alt=\"Windows Build\" data-canonical-src=\"https://img.shields.io/appveyor/ci/dougwilson/express/master.svg?label=windows\" style=\"max-width:100%;\"></a>\n<a href=\"https://coveralls.io/r/expressjs/express?branch=master\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/87b7c351c3948e22301c60d0148e10ac080f12595eb36966bca3d8ed0500dea3/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f657870726573736a732f657870726573732f6d61737465722e737667\" alt=\"Test Coverage\" data-canonical-src=\"https://img.shields.io/coveralls/expressjs/express/master.svg\" style=\"max-width:100%;\"></a></p>\n<div class=\"highlight highlight-source-js position-relative\" data-snippet-clipboard-copy-content=\"const express = require('express')\nconst app = express()\n\napp.get('/', function (req, res) {\n  res.send('Hello World')\n})\n\napp.listen(3000)\n\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">express</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'express'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">app</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">express</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">function</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">req</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">res</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello World'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-s1\">app</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">listen</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">3000</span><span class=\"pl-kos\">)</span></pre></div>\n<h2><a id=\"user-content-installation\" class=\"anchor\" aria-hidden=\"true\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Installation</h2>\n<p>This is a <a href=\"https://nodejs.org/en/\" rel=\"nofollow\">Node.js</a> module available through the\n<a href=\"https://www.npmjs.com/\" rel=\"nofollow\">npm registry</a>.</p>\n<p>Before installing, <a href=\"https://nodejs.org/en/download/\" rel=\"nofollow\">download and install Node.js</a>.\nNode.js 0.10 or higher is required.</p>\n<p>If this is a brand new project, make sure to create a <code>package.json</code> first with\nthe <a href=\"https://docs.npmjs.com/creating-a-package-json-file\" rel=\"nofollow\"><code>npm init</code> command</a>.</p>\n<p>Installation is done using the\n<a href=\"https://docs.npmjs.com/getting-started/installing-npm-packages-locally\" rel=\"nofollow\"><code>npm install</code> command</a>:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ npm install express\n\"><pre>$ npm install express</pre></div>\n<p>Follow <a href=\"http://expressjs.com/en/starter/installing.html\" rel=\"nofollow\">our installing guide</a>\nfor more information.</p>\n<h2><a id=\"user-content-features\" class=\"anchor\" aria-hidden=\"true\" href=\"#features\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Features</h2>\n<ul>\n<li>Robust routing</li>\n<li>Focus on high performance</li>\n<li>Super-high test coverage</li>\n<li>HTTP helpers (redirection, caching, etc)</li>\n<li>View system supporting 14+ template engines</li>\n<li>Content negotiation</li>\n<li>Executable for generating applications quickly</li>\n</ul>\n<h2><a id=\"user-content-docs--community\" class=\"anchor\" aria-hidden=\"true\" href=\"#docs--community\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Docs &amp; Community</h2>\n<ul>\n<li><a href=\"http://expressjs.com/\" rel=\"nofollow\">Website and Documentation</a> - [<a href=\"https://github.com/expressjs/expressjs.com\">website repo</a>]</li>\n<li><a href=\"https://webchat.freenode.net/?channels=express\" rel=\"nofollow\">#express</a> on freenode IRC</li>\n<li><a href=\"https://github.com/expressjs\">GitHub Organization</a> for Official Middleware &amp; Modules</li>\n<li>Visit the <a href=\"https://github.com/expressjs/express/wiki\">Wiki</a></li>\n<li><a href=\"https://groups.google.com/group/express-js\" rel=\"nofollow\">Google Group</a> for discussion</li>\n<li><a href=\"https://gitter.im/expressjs/express\" rel=\"nofollow\">Gitter</a> for support and discussion</li>\n</ul>\n<p><strong>PROTIP</strong> Be sure to read <a href=\"https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x\">Migrating from 3.x to 4.x</a> as well as <a href=\"https://github.com/expressjs/express/wiki/New-features-in-4.x\">New features in 4.x</a>.</p>\n<h3><a id=\"user-content-security-issues\" class=\"anchor\" aria-hidden=\"true\" href=\"#security-issues\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Security Issues</h3>\n<p>If you discover a security vulnerability in Express, please see <a href=\"Security.md\">Security Policies and Procedures</a>.</p>\n<h2><a id=\"user-content-quick-start\" class=\"anchor\" aria-hidden=\"true\" href=\"#quick-start\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Quick Start</h2>\n<p>The quickest way to get started with express is to utilize the executable <a href=\"https://github.com/expressjs/generator\"><code>express(1)</code></a> to generate an application as shown below:</p>\n<p>Install the executable. The executable's major version will match Express's:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ npm install -g express-generator@4\n\"><pre>$ npm install -g express-generator@4</pre></div>\n<p>Create the app:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ express /tmp/foo &amp;&amp; cd /tmp/foo\n\"><pre>$ express /tmp/foo <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-c1\">cd</span> /tmp/foo</pre></div>\n<p>Install dependencies:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ npm install\n\"><pre>$ npm install</pre></div>\n<p>Start the server:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ npm start\n\"><pre>$ npm start</pre></div>\n<p>View the website at: <a href=\"http://localhost:3000\" rel=\"nofollow\">http://localhost:3000</a></p>\n<h2><a id=\"user-content-philosophy\" class=\"anchor\" aria-hidden=\"true\" href=\"#philosophy\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Philosophy</h2>\n<p>The Express philosophy is to provide small, robust tooling for HTTP servers, making\nit a great solution for single page applications, websites, hybrids, or public\nHTTP APIs.</p>\n<p>Express does not force you to use any specific ORM or template engine. With support for over\n14 template engines via <a href=\"https://github.com/tj/consolidate.js\">Consolidate.js</a>,\nyou can quickly craft your perfect framework.</p>\n<h2><a id=\"user-content-examples\" class=\"anchor\" aria-hidden=\"true\" href=\"#examples\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Examples</h2>\n<p>To view the examples, clone the Express repo and install the dependencies:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ git clone git://github.com/expressjs/express.git --depth 1\n$ cd express\n$ npm install\n\"><pre>$ git clone git://github.com/expressjs/express.git --depth 1\n$ <span class=\"pl-c1\">cd</span> express\n$ npm install</pre></div>\n<p>Then run whichever example you want:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ node examples/content-negotiation\n\"><pre>$ node examples/content-negotiation</pre></div>\n<h2><a id=\"user-content-tests\" class=\"anchor\" aria-hidden=\"true\" href=\"#tests\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Tests</h2>\n<p>To run the test suite, first install the dependencies, then run <code>npm test</code>:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"$ npm install\n$ npm test\n\"><pre>$ npm install\n$ npm <span class=\"pl-c1\">test</span></pre></div>\n<h2><a id=\"user-content-contributing\" class=\"anchor\" aria-hidden=\"true\" href=\"#contributing\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Contributing</h2>\n<p><a href=\"Contributing.md\">Contributing Guide</a></p>\n<h2><a id=\"user-content-people\" class=\"anchor\" aria-hidden=\"true\" href=\"#people\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>People</h2>\n<p>The original author of Express is <a href=\"https://github.com/tj\">TJ Holowaychuk</a></p>\n<p>The current lead maintainer is <a href=\"https://github.com/dougwilson\">Douglas Christopher Wilson</a></p>\n<p><a href=\"https://github.com/expressjs/express/graphs/contributors\">List of all contributors</a></p>\n<h2><a id=\"user-content-license\" class=\"anchor\" aria-hidden=\"true\" href=\"#license\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>License</h2>\n<p><a href=\"LICENSE\">MIT</a></p>\n</article></div>",
    "time": "2021-06-19T14:32:46.583Z"
  },
  {
    "uri": "/repos/istomyang/express/git/blobs/cdb36c1b4662559d2880d7a1ae9e65ca7497f47e",
    "content": "<span class=\"hljs-comment\"># http://editorconfig.org</span>\n<span class=\"hljs-attr\">root</span> = <span class=\"hljs-literal\">true</span>\n\n<span class=\"hljs-section\">[*]</span>\n<span class=\"hljs-attr\">charset</span> = utf-<span class=\"hljs-number\">8</span>\n<span class=\"hljs-attr\">insert_final_newline</span> = <span class=\"hljs-literal\">true</span>\n<span class=\"hljs-attr\">trim_trailing_whitespace</span> = <span class=\"hljs-literal\">true</span>\n\n<span class=\"hljs-section\">[{*.js,*.json,*.yml}]</span>\n<span class=\"hljs-attr\">indent_size</span> = <span class=\"hljs-number\">2</span>\n<span class=\"hljs-attr\">indent_style</span> = space\n",
    "time": "2021-06-19T14:47:07.029Z"
  },
  {
    "uri": "/repos/istomyang/express/git/blobs/594007b5b438cb121bb72d6fc27eea940612db98",
    "content": "<span class=\"hljs-comment\">/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */</span>\n<span class=\"hljs-meta\">\n&#x27;use strict&#x27;</span>;\n\n<span class=\"hljs-comment\">/**\n * Module dependencies.\n */</span>\n\n<span class=\"hljs-keyword\">var</span> bodyParser = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;body-parser&#x27;</span>)\n<span class=\"hljs-keyword\">var</span> EventEmitter = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;events&#x27;</span>).EventEmitter;\n<span class=\"hljs-keyword\">var</span> mixin = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;merge-descriptors&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> proto = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./application&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> Route = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./router/route&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> Router = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./router&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> req = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./request&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> res = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./response&#x27;</span>);\n\n<span class=\"hljs-comment\">/**\n * Expose `createApplication()`.\n */</span>\n\n<span class=\"hljs-built_in\">exports</span> = <span class=\"hljs-built_in\">module</span>.exports = createApplication;\n\n<span class=\"hljs-comment\">/**\n * Create an express application.\n *\n * <span class=\"hljs-doctag\">@return <span class=\"hljs-type\">{Function}</span></span>\n * <span class=\"hljs-doctag\">@api <span class=\"hljs-variable\">public</span></span>\n */</span>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createApplication</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">var</span> app = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n    app.handle(req, res, next);\n  };\n\n  mixin(app, EventEmitter.prototype, <span class=\"hljs-literal\">false</span>);\n  mixin(app, proto, <span class=\"hljs-literal\">false</span>);\n\n  <span class=\"hljs-comment\">// expose the prototype that will get set on requests</span>\n  app.request = <span class=\"hljs-built_in\">Object</span>.create(req, {\n    <span class=\"hljs-attr\">app</span>: { <span class=\"hljs-attr\">configurable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">enumerable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">writable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">value</span>: app }\n  })\n\n  <span class=\"hljs-comment\">// expose the prototype that will get set on responses</span>\n  app.response = <span class=\"hljs-built_in\">Object</span>.create(res, {\n    <span class=\"hljs-attr\">app</span>: { <span class=\"hljs-attr\">configurable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">enumerable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">writable</span>: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-attr\">value</span>: app }\n  })\n\n  app.init();\n  <span class=\"hljs-keyword\">return</span> app;\n}\n\n<span class=\"hljs-comment\">/**\n * Expose the prototypes.\n */</span>\n\n<span class=\"hljs-built_in\">exports</span>.application = proto;\n<span class=\"hljs-built_in\">exports</span>.request = req;\n<span class=\"hljs-built_in\">exports</span>.response = res;\n\n<span class=\"hljs-comment\">/**\n * Expose constructors.\n */</span>\n\n<span class=\"hljs-built_in\">exports</span>.Route = Route;\n<span class=\"hljs-built_in\">exports</span>.Router = Router;\n\n<span class=\"hljs-comment\">/**\n * Expose middleware\n */</span>\n\n<span class=\"hljs-built_in\">exports</span>.json = bodyParser.json\n<span class=\"hljs-built_in\">exports</span>.query = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;./middleware/query&#x27;</span>);\n<span class=\"hljs-built_in\">exports</span>.static = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;serve-static&#x27;</span>);\n<span class=\"hljs-built_in\">exports</span>.urlencoded = bodyParser.urlencoded\n\n<span class=\"hljs-comment\">/**\n * Replace removed middleware with an appropriate error message.\n */</span>\n\n<span class=\"hljs-keyword\">var</span> removedMiddlewares = [\n  <span class=\"hljs-string\">&#x27;bodyParser&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;compress&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;cookieSession&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;session&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;logger&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;cookieParser&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;favicon&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;responseTime&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;errorHandler&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;timeout&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;methodOverride&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;vhost&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;csrf&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;directory&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;limit&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;multipart&#x27;</span>,\n  <span class=\"hljs-string\">&#x27;staticCache&#x27;</span>\n]\n\nremovedMiddlewares.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">name</span>) </span>{\n  <span class=\"hljs-built_in\">Object</span>.defineProperty(<span class=\"hljs-built_in\">exports</span>, name, {\n    <span class=\"hljs-attr\">get</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;Most middleware (like &#x27;</span> + name + <span class=\"hljs-string\">&#x27;) is no longer bundled with Express and must be installed separately. Please see https://github.com/senchalabs/connect#middleware.&#x27;</span>);\n    },\n    <span class=\"hljs-attr\">configurable</span>: <span class=\"hljs-literal\">true</span>\n  });\n});\n",
    "time": "2021-06-19T14:47:13.770Z"
  },
  {
    "uri": "/repos/istomyang/express/git/blobs/8f90152d8c82a5743864b866bc64a944b5ebf15f",
    "content": "\n<span class=\"hljs-keyword\">var</span> after = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;after&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> should = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;should&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> express = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;../&#x27;</span>)\n  , Route = express.Route\n  , methods = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&#x27;methods&#x27;</span>)\n\ndescribe(<span class=\"hljs-string\">&#x27;Route&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  it(<span class=\"hljs-string\">&#x27;should work without handlers&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> }\n    <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;/foo&#x27;</span>)\n    route.dispatch(req, {}, done)\n  })\n\n  describe(<span class=\"hljs-string\">&#x27;.all&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    it(<span class=\"hljs-string\">&#x27;should add handler&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>)</span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;/foo&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.called = <span class=\"hljs-literal\">true</span>;\n        next();\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        should(req.called).be.ok()\n        done();\n      });\n    })\n\n    it(<span class=\"hljs-string\">&#x27;should handle VERBS&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> count = <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;/foo&#x27;</span>);\n      <span class=\"hljs-keyword\">var</span> cb = after(methods.length, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        count.should.equal(methods.length);\n        done();\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        count++;\n        next();\n      });\n\n      methods.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">testMethod</span>(<span class=\"hljs-params\">method</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: method, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n        route.dispatch(req, {}, cb);\n      });\n    })\n\n    it(<span class=\"hljs-string\">&#x27;should stack&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;/foo&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.count++;\n        next();\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.count++;\n        next();\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        req.count.should.equal(<span class=\"hljs-number\">2</span>);\n        done();\n      });\n    })\n  })\n\n  describe(<span class=\"hljs-string\">&#x27;.VERB&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    it(<span class=\"hljs-string\">&#x27;should support .get&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>)</span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.called = <span class=\"hljs-literal\">true</span>;\n        next();\n      })\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        should(req.called).be.ok()\n        done();\n      });\n    })\n\n    it(<span class=\"hljs-string\">&#x27;should limit to just .VERB&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>)</span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;POST&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;not me!&#x27;</span>);\n      })\n\n      route.post(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.called = <span class=\"hljs-literal\">true</span>;\n        next();\n      })\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        should(req.called).be.true()\n        done();\n      });\n    })\n\n    it(<span class=\"hljs-string\">&#x27;should allow fallthrough&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>)</span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">order</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.order += <span class=\"hljs-string\">&#x27;a&#x27;</span>;\n        next();\n      })\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.order += <span class=\"hljs-string\">&#x27;b&#x27;</span>;\n        next();\n      });\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>) </span>{\n        req.order += <span class=\"hljs-string\">&#x27;c&#x27;</span>;\n        next();\n      })\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        req.order.should.equal(<span class=\"hljs-string\">&#x27;abc&#x27;</span>);\n        done();\n      });\n    })\n  })\n\n  describe(<span class=\"hljs-string\">&#x27;errors&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    it(<span class=\"hljs-string\">&#x27;should handle errors via arity 4 functions&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>)</span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">order</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        next(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;foobar&#x27;</span>));\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        req.order += <span class=\"hljs-string\">&#x27;0&#x27;</span>;\n        next();\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, req, res, next</span>)</span>{\n        req.order += <span class=\"hljs-string\">&#x27;a&#x27;</span>;\n        next(err);\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        should(err).be.ok()\n        should(err.message).equal(<span class=\"hljs-string\">&#x27;foobar&#x27;</span>);\n        req.order.should.equal(<span class=\"hljs-string\">&#x27;a&#x27;</span>);\n        done();\n      });\n    })\n\n    it(<span class=\"hljs-string\">&#x27;should handle throw&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">order</span>: <span class=\"hljs-string\">&#x27;&#x27;</span>, <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;foobar&#x27;</span>);\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        req.order += <span class=\"hljs-string\">&#x27;0&#x27;</span>;\n        next();\n      });\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, req, res, next</span>)</span>{\n        req.order += <span class=\"hljs-string\">&#x27;a&#x27;</span>;\n        next(err);\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        should(err).be.ok()\n        should(err.message).equal(<span class=\"hljs-string\">&#x27;foobar&#x27;</span>);\n        req.order.should.equal(<span class=\"hljs-string\">&#x27;a&#x27;</span>);\n        done();\n      });\n    });\n\n    it(<span class=\"hljs-string\">&#x27;should handle throwing inside error handlers&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;boom!&#x27;</span>);\n      });\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, req, res, next</span>)</span>{\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;oops&#x27;</span>);\n      });\n\n      route.get(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, req, res, next</span>)</span>{\n        req.message = err.message;\n        next();\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">err</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (err) <span class=\"hljs-keyword\">return</span> done(err);\n        should(req.message).equal(<span class=\"hljs-string\">&#x27;oops&#x27;</span>);\n        done();\n      });\n    });\n\n    it(<span class=\"hljs-string\">&#x27;should handle throw in .all&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">req, res, next</span>)</span>{\n        <span class=\"hljs-keyword\">throw</span> <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Error</span>(<span class=\"hljs-string\">&#x27;boom!&#x27;</span>);\n      });\n\n      route.dispatch(req, {}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err</span>)</span>{\n        should(err).be.ok()\n        err.message.should.equal(<span class=\"hljs-string\">&#x27;boom!&#x27;</span>);\n        done();\n      });\n    });\n\n    it(<span class=\"hljs-string\">&#x27;should handle single error handler&#x27;</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">done</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> req = { <span class=\"hljs-attr\">method</span>: <span class=\"hljs-string\">&#x27;GET&#x27;</span>, <span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&#x27;/&#x27;</span> };\n      <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">new</span> Route(<span class=\"hljs-string\">&#x27;&#x27;</span>);\n\n      route.all(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">err, req, res, next</span>)</span>{\n        <span class=\"hljs-comment\">// this should not execute</span>\n        <span class=\"hljs-literal\">true</span>.should.be.false()\n      });\n\n      route.dispatch(req, {}, done);\n    });\n  })\n})\n",
    "time": "2021-06-19T14:56:15.878Z"
  },
  {
    "uri": "/repos/istomyang/express/git/blobs/91f77d241e41400b6836ef6ecb211bd26b79055f",
    "content": "<span class=\"hljs-comment\">/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */</span>\n\n<span class=\"hljs-string\">&#x27;use strict&#x27;</span>;\n\n<span class=\"hljs-comment\">/**\n * Module dependencies.\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\n<span class=\"hljs-keyword\">var</span> finalhandler = require(<span class=\"hljs-string\">&#x27;finalhandler&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> Router = require(<span class=\"hljs-string\">&#x27;./router&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> methods = require(<span class=\"hljs-string\">&#x27;methods&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> middleware = require(<span class=\"hljs-string\">&#x27;./middleware/init&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> query = require(<span class=\"hljs-string\">&#x27;./middleware/query&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> debug = require(<span class=\"hljs-string\">&#x27;debug&#x27;</span>)(<span class=\"hljs-string\">&#x27;express:application&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> View = require(<span class=\"hljs-string\">&#x27;./view&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> http = require(<span class=\"hljs-string\">&#x27;http&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> compileETag = require(<span class=\"hljs-string\">&#x27;./utils&#x27;</span>).compileETag;\n<span class=\"hljs-keyword\">var</span> compileQueryParser = require(<span class=\"hljs-string\">&#x27;./utils&#x27;</span>).compileQueryParser;\n<span class=\"hljs-keyword\">var</span> compileTrust = require(<span class=\"hljs-string\">&#x27;./utils&#x27;</span>).compileTrust;\n<span class=\"hljs-keyword\">var</span> deprecate = require(<span class=\"hljs-string\">&#x27;depd&#x27;</span>)(<span class=\"hljs-string\">&#x27;express&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> flatten = require(<span class=\"hljs-string\">&#x27;array-flatten&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> merge = require(<span class=\"hljs-string\">&#x27;utils-merge&#x27;</span>);\n<span class=\"hljs-keyword\">var</span> resolve = require(<span class=\"hljs-string\">&#x27;path&#x27;</span>).resolve;\n<span class=\"hljs-keyword\">var</span> setPrototypeOf = require(<span class=\"hljs-string\">&#x27;setprototypeof&#x27;</span>)\n<span class=\"hljs-keyword\">var</span> slice = Array.prototype.slice;\n\n<span class=\"hljs-comment\">/**\n * Application prototype.\n */</span>\n\n<span class=\"hljs-keyword\">var</span> app = exports = module.exports = {};\n\n<span class=\"hljs-comment\">/**\n * Variable for trust proxy inheritance back-compat\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\n<span class=\"hljs-keyword\">var</span> trustProxyDefaultSymbol = <span class=\"hljs-string\">&#x27;@@symbol:trust_proxy_default&#x27;</span>;\n\n<span class=\"hljs-comment\">/**\n * Initialize the server.\n *\n *   - setup default configuration\n *   - setup default middleware\n *   - setup route reflection methods\n *\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\napp.<span class=\"hljs-keyword\">init</span> = function <span class=\"hljs-keyword\">init</span>() {\n  <span class=\"hljs-keyword\">this</span>.cache = {};\n  <span class=\"hljs-keyword\">this</span>.engines = {};\n  <span class=\"hljs-keyword\">this</span>.settings = {};\n\n  <span class=\"hljs-keyword\">this</span>.defaultConfiguration();\n};\n\n<span class=\"hljs-comment\">/**\n * Initialize application configuration.\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\napp.defaultConfiguration = function defaultConfiguration() {\n  <span class=\"hljs-keyword\">var</span> env = process.env.NODE_ENV || <span class=\"hljs-string\">&#x27;development&#x27;</span>;\n\n  <span class=\"hljs-comment\">// default settings</span>\n  <span class=\"hljs-keyword\">this</span>.enable(<span class=\"hljs-string\">&#x27;x-powered-by&#x27;</span>);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;etag&#x27;</span>, <span class=\"hljs-string\">&#x27;weak&#x27;</span>);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;env&#x27;</span>, env);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;query parser&#x27;</span>, <span class=\"hljs-string\">&#x27;extended&#x27;</span>);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;subdomain offset&#x27;</span>, <span class=\"hljs-number\">2</span>);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;trust proxy&#x27;</span>, <span class=\"hljs-literal\">false</span>);\n\n  <span class=\"hljs-comment\">// trust proxy inherit back-compat</span>\n  Object.defineProperty(<span class=\"hljs-keyword\">this</span>.settings, trustProxyDefaultSymbol, {\n    configurable: <span class=\"hljs-literal\">true</span>,\n    value: <span class=\"hljs-literal\">true</span>\n  });\n\n  debug(<span class=\"hljs-string\">&#x27;booting in %s mode&#x27;</span>, env);\n\n  <span class=\"hljs-keyword\">this</span>.on(<span class=\"hljs-string\">&#x27;mount&#x27;</span>, function onmount(parent) {\n    <span class=\"hljs-comment\">// inherit trust proxy</span>\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.settings[trustProxyDefaultSymbol] === <span class=\"hljs-literal\">true</span>\n      &amp;&amp; typeof parent.settings[<span class=\"hljs-string\">&#x27;trust proxy fn&#x27;</span>] === <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n      delete <span class=\"hljs-keyword\">this</span>.settings[<span class=\"hljs-string\">&#x27;trust proxy&#x27;</span>];\n      delete <span class=\"hljs-keyword\">this</span>.settings[<span class=\"hljs-string\">&#x27;trust proxy fn&#x27;</span>];\n    }\n\n    <span class=\"hljs-comment\">// inherit protos</span>\n    setPrototypeOf(<span class=\"hljs-keyword\">this</span>.request, parent.request)\n    setPrototypeOf(<span class=\"hljs-keyword\">this</span>.response, parent.response)\n    setPrototypeOf(<span class=\"hljs-keyword\">this</span>.engines, parent.engines)\n    setPrototypeOf(<span class=\"hljs-keyword\">this</span>.settings, parent.settings)\n  });\n\n  <span class=\"hljs-comment\">// setup locals</span>\n  <span class=\"hljs-keyword\">this</span>.locals = Object.create(<span class=\"hljs-literal\">null</span>);\n\n  <span class=\"hljs-comment\">// top-most app is mounted at /</span>\n  <span class=\"hljs-keyword\">this</span>.mountpath = <span class=\"hljs-string\">&#x27;/&#x27;</span>;\n\n  <span class=\"hljs-comment\">// default locals</span>\n  <span class=\"hljs-keyword\">this</span>.locals.settings = <span class=\"hljs-keyword\">this</span>.settings;\n\n  <span class=\"hljs-comment\">// default configuration</span>\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;view&#x27;</span>, View);\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;views&#x27;</span>, resolve(<span class=\"hljs-string\">&#x27;views&#x27;</span>));\n  <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;jsonp callback name&#x27;</span>, <span class=\"hljs-string\">&#x27;callback&#x27;</span>);\n\n  <span class=\"hljs-keyword\">if</span> (env === <span class=\"hljs-string\">&#x27;production&#x27;</span>) {\n    <span class=\"hljs-keyword\">this</span>.enable(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>);\n  }\n\n  Object.defineProperty(<span class=\"hljs-keyword\">this</span>, <span class=\"hljs-string\">&#x27;router&#x27;</span>, {\n    <span class=\"hljs-keyword\">get</span>: function() {\n      <span class=\"hljs-keyword\">throw</span> new Error(<span class=\"hljs-string\">&#x27;\\&#x27;app.router\\&#x27; is deprecated!\\nPlease see the 3.x to 4.x migration guide for details on how to update your app.&#x27;</span>);\n    }\n  });\n};\n\n<span class=\"hljs-comment\">/**\n * lazily adds the base router if it has not yet been added.\n *\n * We cannot add the base router in the defaultConfiguration because\n * it reads app settings which might be set after that has run.\n *\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\napp.lazyrouter = function lazyrouter() {\n  <span class=\"hljs-keyword\">if</span> (!<span class=\"hljs-keyword\">this</span>._router) {\n    <span class=\"hljs-keyword\">this</span>._router = new Router({\n      caseSensitive: <span class=\"hljs-keyword\">this</span>.enabled(<span class=\"hljs-string\">&#x27;case sensitive routing&#x27;</span>),\n      strict: <span class=\"hljs-keyword\">this</span>.enabled(<span class=\"hljs-string\">&#x27;strict routing&#x27;</span>)\n    });\n\n    <span class=\"hljs-keyword\">this</span>._router.use(query(<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;query parser fn&#x27;</span>)));\n    <span class=\"hljs-keyword\">this</span>._router.use(middleware.<span class=\"hljs-keyword\">init</span>(<span class=\"hljs-keyword\">this</span>));\n  }\n};\n\n<span class=\"hljs-comment\">/**\n * Dispatch a req, res pair into the application. Starts pipeline processing.\n *\n * If no callback is provided, then default error handlers will respond\n * in the event of an error bubbling through the stack.\n *\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\napp.handle = function handle(req, res, callback) {\n  <span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-keyword\">this</span>._router;\n\n  <span class=\"hljs-comment\">// final handler</span>\n  <span class=\"hljs-keyword\">var</span> done = callback || finalhandler(req, res, {\n    env: <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;env&#x27;</span>),\n    onerror: logerror.bind(<span class=\"hljs-keyword\">this</span>)\n  });\n\n  <span class=\"hljs-comment\">// no routes</span>\n  <span class=\"hljs-keyword\">if</span> (!router) {\n    debug(<span class=\"hljs-string\">&#x27;no routes defined on app&#x27;</span>);\n    done();\n    <span class=\"hljs-keyword\">return</span>;\n  }\n\n  router.handle(req, res, done);\n};\n\n<span class=\"hljs-comment\">/**\n * Proxy `Router#use()` to add middleware to the app router.\n * See Router#use() documentation for details.\n *\n * If the _fn_ parameter is an express app, then it will be\n * mounted at the _route_ specified.\n *\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.use = function use(fn) {\n  <span class=\"hljs-keyword\">var</span> offset = <span class=\"hljs-number\">0</span>;\n  <span class=\"hljs-keyword\">var</span> path = <span class=\"hljs-string\">&#x27;/&#x27;</span>;\n\n  <span class=\"hljs-comment\">// default path to &#x27;/&#x27;</span>\n  <span class=\"hljs-comment\">// disambiguate app.use([fn])</span>\n  <span class=\"hljs-keyword\">if</span> (typeof fn !== <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n    <span class=\"hljs-keyword\">var</span> arg = fn;\n\n    <span class=\"hljs-keyword\">while</span> (Array.isArray(arg) &amp;&amp; arg.length !== <span class=\"hljs-number\">0</span>) {\n      arg = arg[<span class=\"hljs-number\">0</span>];\n    }\n\n    <span class=\"hljs-comment\">// first arg is the path</span>\n    <span class=\"hljs-keyword\">if</span> (typeof arg !== <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n      offset = <span class=\"hljs-number\">1</span>;\n      path = fn;\n    }\n  }\n\n  <span class=\"hljs-keyword\">var</span> fns = flatten(slice.call(arguments, offset));\n\n  <span class=\"hljs-keyword\">if</span> (fns.length === <span class=\"hljs-number\">0</span>) {\n    <span class=\"hljs-keyword\">throw</span> new TypeError(<span class=\"hljs-string\">&#x27;app.use() requires a middleware function&#x27;</span>)\n  }\n\n  <span class=\"hljs-comment\">// setup router</span>\n  <span class=\"hljs-keyword\">this</span>.lazyrouter();\n  <span class=\"hljs-keyword\">var</span> router = <span class=\"hljs-keyword\">this</span>._router;\n\n  fns.forEach(function (fn) {\n    <span class=\"hljs-comment\">// non-express app</span>\n    <span class=\"hljs-keyword\">if</span> (!fn || !fn.handle || !fn.<span class=\"hljs-keyword\">set</span>) {\n      <span class=\"hljs-keyword\">return</span> router.use(path, fn);\n    }\n\n    debug(<span class=\"hljs-string\">&#x27;.use app under %s&#x27;</span>, path);\n    fn.mountpath = path;\n    fn.parent = <span class=\"hljs-keyword\">this</span>;\n\n    <span class=\"hljs-comment\">// restore .app property on req and res</span>\n    router.use(path, function mounted_app(req, res, next) {\n      <span class=\"hljs-keyword\">var</span> orig = req.app;\n      fn.handle(req, res, function (err) {\n        setPrototypeOf(req, orig.request)\n        setPrototypeOf(res, orig.response)\n        next(err);\n      });\n    });\n\n    <span class=\"hljs-comment\">// mounted an app</span>\n    fn.emit(<span class=\"hljs-string\">&#x27;mount&#x27;</span>, <span class=\"hljs-keyword\">this</span>);\n  }, <span class=\"hljs-keyword\">this</span>);\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * Proxy to the app `Router#route()`\n * Returns a new `Route` instance for the _path_.\n *\n * Routes are isolated middleware stacks for specific paths.\n * See the Route api docs for details.\n *\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.route = function route(path) {\n  <span class=\"hljs-keyword\">this</span>.lazyrouter();\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>._router.route(path);\n};\n\n<span class=\"hljs-comment\">/**\n * Register the given template engine callback `fn`\n * as `ext`.\n *\n * By default will `require()` the engine based on the\n * file extension. For example if you try to render\n * a &quot;foo.ejs&quot; file Express will invoke the following internally:\n *\n *     app.engine(&#x27;ejs&#x27;, require(&#x27;ejs&#x27;).__express);\n *\n * For engines that do not provide `.__express` out of the box,\n * or if you wish to &quot;map&quot; a different extension to the template engine\n * you may use this method. For example mapping the EJS template engine to\n * &quot;.html&quot; files:\n *\n *     app.engine(&#x27;html&#x27;, require(&#x27;ejs&#x27;).renderFile);\n *\n * In this case EJS provides a `.renderFile()` method with\n * the same signature that Express expects: `(path, options, callback)`,\n * though note that it aliases this method as `ejs.__express` internally\n * so if you&#x27;re using &quot;.ejs&quot; extensions you dont need to do anything.\n *\n * Some template engines do not follow this convention, the\n * [Consolidate.js](https://github.com/tj/consolidate.js)\n * library was created to map all of node&#x27;s popular template\n * engines to follow this convention, thus allowing them to\n * work seamlessly within Express.\n *\n * <span class=\"hljs-doctag\">@param</span> {String} ext\n * <span class=\"hljs-doctag\">@param</span> {Function} fn\n * <span class=\"hljs-doctag\">@return</span> {app} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.engine = function engine(ext, fn) {\n  <span class=\"hljs-keyword\">if</span> (typeof fn !== <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n    <span class=\"hljs-keyword\">throw</span> new Error(<span class=\"hljs-string\">&#x27;callback function required&#x27;</span>);\n  }\n\n  <span class=\"hljs-comment\">// get file extension</span>\n  <span class=\"hljs-keyword\">var</span> extension = ext[<span class=\"hljs-number\">0</span>] !== <span class=\"hljs-string\">&#x27;.&#x27;</span>\n    ? <span class=\"hljs-string\">&#x27;.&#x27;</span> + ext\n    : ext;\n\n  <span class=\"hljs-comment\">// store engine</span>\n  <span class=\"hljs-keyword\">this</span>.engines[extension] = fn;\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * Proxy to `Router#param()` with one added api feature. The _name_ parameter\n * can be an array of names.\n *\n * See the Router#param() docs for more details.\n *\n * <span class=\"hljs-doctag\">@param</span> {String|Array} name\n * <span class=\"hljs-doctag\">@param</span> {Function} fn\n * <span class=\"hljs-doctag\">@return</span> {app} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.param = function param(name, fn) {\n  <span class=\"hljs-keyword\">this</span>.lazyrouter();\n\n  <span class=\"hljs-keyword\">if</span> (Array.isArray(name)) {\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; name.length; i++) {\n      <span class=\"hljs-keyword\">this</span>.param(name[i], fn);\n    }\n\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n  }\n\n  <span class=\"hljs-keyword\">this</span>._router.param(name, fn);\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * Assign `setting` to `val`, or return `setting`&#x27;s value.\n *\n *    app.set(&#x27;foo&#x27;, &#x27;bar&#x27;);\n *    app.set(&#x27;foo&#x27;);\n *    // =&gt; &quot;bar&quot;\n *\n * Mounted servers inherit their parent server&#x27;s settings.\n *\n * <span class=\"hljs-doctag\">@param</span> {String} setting\n * <span class=\"hljs-doctag\">@param</span> {*} [val]\n * <span class=\"hljs-doctag\">@return</span> {Server} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.<span class=\"hljs-keyword\">set</span> = function <span class=\"hljs-keyword\">set</span>(setting, <span class=\"hljs-keyword\">val</span>) {\n  <span class=\"hljs-keyword\">if</span> (arguments.length === <span class=\"hljs-number\">1</span>) {\n    <span class=\"hljs-comment\">// app.get(setting)</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.settings[setting];\n  }\n\n  debug(<span class=\"hljs-string\">&#x27;set &quot;%s&quot; to %o&#x27;</span>, setting, <span class=\"hljs-keyword\">val</span>);\n\n  <span class=\"hljs-comment\">// set value</span>\n  <span class=\"hljs-keyword\">this</span>.settings[setting] = <span class=\"hljs-keyword\">val</span>;\n\n  <span class=\"hljs-comment\">// trigger matched settings</span>\n  switch (setting) {\n    case <span class=\"hljs-string\">&#x27;etag&#x27;</span>:\n      <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;etag fn&#x27;</span>, compileETag(<span class=\"hljs-keyword\">val</span>));\n      <span class=\"hljs-keyword\">break</span>;\n    case <span class=\"hljs-string\">&#x27;query parser&#x27;</span>:\n      <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;query parser fn&#x27;</span>, compileQueryParser(<span class=\"hljs-keyword\">val</span>));\n      <span class=\"hljs-keyword\">break</span>;\n    case <span class=\"hljs-string\">&#x27;trust proxy&#x27;</span>:\n      <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(<span class=\"hljs-string\">&#x27;trust proxy fn&#x27;</span>, compileTrust(<span class=\"hljs-keyword\">val</span>));\n\n      <span class=\"hljs-comment\">// trust proxy inherit back-compat</span>\n      Object.defineProperty(<span class=\"hljs-keyword\">this</span>.settings, trustProxyDefaultSymbol, {\n        configurable: <span class=\"hljs-literal\">true</span>,\n        value: <span class=\"hljs-literal\">false</span>\n      });\n\n      <span class=\"hljs-keyword\">break</span>;\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * Return the app&#x27;s absolute pathname\n * based on the parent(s) that have\n * mounted it.\n *\n * For example if the application was\n * mounted as &quot;/admin&quot;, which itself\n * was mounted as &quot;/blog&quot; then the\n * return value would be &quot;/blog/admin&quot;.\n *\n * <span class=\"hljs-doctag\">@return</span> {String}\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\napp.path = function path() {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.parent\n    ? <span class=\"hljs-keyword\">this</span>.parent.path() + <span class=\"hljs-keyword\">this</span>.mountpath\n    : <span class=\"hljs-string\">&#x27;&#x27;</span>;\n};\n\n<span class=\"hljs-comment\">/**\n * Check if `setting` is enabled (truthy).\n *\n *    app.enabled(&#x27;foo&#x27;)\n *    // =&gt; false\n *\n *    app.enable(&#x27;foo&#x27;)\n *    app.enabled(&#x27;foo&#x27;)\n *    // =&gt; true\n *\n * <span class=\"hljs-doctag\">@param</span> {String} setting\n * <span class=\"hljs-doctag\">@return</span> {Boolean}\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.enabled = function enabled(setting) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Boolean</span>(<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(setting));\n};\n\n<span class=\"hljs-comment\">/**\n * Check if `setting` is disabled.\n *\n *    app.disabled(&#x27;foo&#x27;)\n *    // =&gt; true\n *\n *    app.enable(&#x27;foo&#x27;)\n *    app.disabled(&#x27;foo&#x27;)\n *    // =&gt; false\n *\n * <span class=\"hljs-doctag\">@param</span> {String} setting\n * <span class=\"hljs-doctag\">@return</span> {Boolean}\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.disabled = function disabled(setting) {\n  <span class=\"hljs-keyword\">return</span> !<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(setting);\n};\n\n<span class=\"hljs-comment\">/**\n * Enable `setting`.\n *\n * <span class=\"hljs-doctag\">@param</span> {String} setting\n * <span class=\"hljs-doctag\">@return</span> {app} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.enable = function enable(setting) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(setting, <span class=\"hljs-literal\">true</span>);\n};\n\n<span class=\"hljs-comment\">/**\n * Disable `setting`.\n *\n * <span class=\"hljs-doctag\">@param</span> {String} setting\n * <span class=\"hljs-doctag\">@return</span> {app} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.disable = function disable(setting) {\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(setting, <span class=\"hljs-literal\">false</span>);\n};\n\n<span class=\"hljs-comment\">/**\n * Delegate `.VERB(...)` calls to `router.VERB(...)`.\n */</span>\n\nmethods.forEach(function(method){\n  app[method] = function(path){\n    <span class=\"hljs-keyword\">if</span> (method === <span class=\"hljs-string\">&#x27;get&#x27;</span> &amp;&amp; arguments.length === <span class=\"hljs-number\">1</span>) {\n      <span class=\"hljs-comment\">// app.get(setting)</span>\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">set</span>(path);\n    }\n\n    <span class=\"hljs-keyword\">this</span>.lazyrouter();\n\n    <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">this</span>._router.route(path);\n    route[method].apply(route, slice.call(arguments, <span class=\"hljs-number\">1</span>));\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n  };\n});\n\n<span class=\"hljs-comment\">/**\n * Special-cased &quot;all&quot; method, applying the given route `path`,\n * middleware, and callback to _every_ HTTP method.\n *\n * <span class=\"hljs-doctag\">@param</span> {String} path\n * <span class=\"hljs-doctag\">@param</span> {Function} ...\n * <span class=\"hljs-doctag\">@return</span> {app} for chaining\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.all = function all(path) {\n  <span class=\"hljs-keyword\">this</span>.lazyrouter();\n\n  <span class=\"hljs-keyword\">var</span> route = <span class=\"hljs-keyword\">this</span>._router.route(path);\n  <span class=\"hljs-keyword\">var</span> args = slice.call(arguments, <span class=\"hljs-number\">1</span>);\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; methods.length; i++) {\n    route[methods[i]].apply(route, args);\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">this</span>;\n};\n\n<span class=\"hljs-comment\">// del -&gt; delete alias</span>\n\napp.del = deprecate.function(app.delete, <span class=\"hljs-string\">&#x27;app.del: Use app.delete instead&#x27;</span>);\n\n<span class=\"hljs-comment\">/**\n * Render the given view `name` name with `options`\n * and a callback accepting an error and the\n * rendered template string.\n *\n * Example:\n *\n *    app.render(&#x27;email&#x27;, { name: &#x27;Tobi&#x27; }, function(err, html){\n *      // ...\n *    })\n *\n * <span class=\"hljs-doctag\">@param</span> {String} name\n * <span class=\"hljs-doctag\">@param</span> {Object|Function} options or fn\n * <span class=\"hljs-doctag\">@param</span> {Function} callback\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.render = function render(name, options, callback) {\n  <span class=\"hljs-keyword\">var</span> cache = <span class=\"hljs-keyword\">this</span>.cache;\n  <span class=\"hljs-keyword\">var</span> done = callback;\n  <span class=\"hljs-keyword\">var</span> engines = <span class=\"hljs-keyword\">this</span>.engines;\n  <span class=\"hljs-keyword\">var</span> opts = options;\n  <span class=\"hljs-keyword\">var</span> renderOptions = {};\n  <span class=\"hljs-keyword\">var</span> view;\n\n  <span class=\"hljs-comment\">// support callback function as second arg</span>\n  <span class=\"hljs-keyword\">if</span> (typeof options === <span class=\"hljs-string\">&#x27;function&#x27;</span>) {\n    done = options;\n    opts = {};\n  }\n\n  <span class=\"hljs-comment\">// merge app.locals</span>\n  merge(renderOptions, <span class=\"hljs-keyword\">this</span>.locals);\n\n  <span class=\"hljs-comment\">// merge options._locals</span>\n  <span class=\"hljs-keyword\">if</span> (opts._locals) {\n    merge(renderOptions, opts._locals);\n  }\n\n  <span class=\"hljs-comment\">// merge options</span>\n  merge(renderOptions, opts);\n\n  <span class=\"hljs-comment\">// set .cache unless explicitly provided</span>\n  <span class=\"hljs-keyword\">if</span> (renderOptions.cache == <span class=\"hljs-literal\">null</span>) {\n    renderOptions.cache = <span class=\"hljs-keyword\">this</span>.enabled(<span class=\"hljs-string\">&#x27;view cache&#x27;</span>);\n  }\n\n  <span class=\"hljs-comment\">// primed cache</span>\n  <span class=\"hljs-keyword\">if</span> (renderOptions.cache) {\n    view = cache[name];\n  }\n\n  <span class=\"hljs-comment\">// view</span>\n  <span class=\"hljs-keyword\">if</span> (!view) {\n    <span class=\"hljs-keyword\">var</span> View = <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;view&#x27;</span>);\n\n    view = new View(name, {\n      defaultEngine: <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;view engine&#x27;</span>),\n      root: <span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;views&#x27;</span>),\n      engines: engines\n    });\n\n    <span class=\"hljs-keyword\">if</span> (!view.path) {\n      <span class=\"hljs-keyword\">var</span> dirs = Array.isArray(view.root) &amp;&amp; view.root.length &gt; <span class=\"hljs-number\">1</span>\n        ? <span class=\"hljs-string\">&#x27;directories &quot;&#x27;</span> + view.root.slice(<span class=\"hljs-number\">0</span>, -<span class=\"hljs-number\">1</span>).join(<span class=\"hljs-string\">&#x27;&quot;, &quot;&#x27;</span>) + <span class=\"hljs-string\">&#x27;&quot; or &quot;&#x27;</span> + view.root[view.root.length - <span class=\"hljs-number\">1</span>] + <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>\n        : <span class=\"hljs-string\">&#x27;directory &quot;&#x27;</span> + view.root + <span class=\"hljs-string\">&#x27;&quot;&#x27;</span>\n      <span class=\"hljs-keyword\">var</span> err = new Error(<span class=\"hljs-string\">&#x27;Failed to lookup view &quot;&#x27;</span> + name + <span class=\"hljs-string\">&#x27;&quot; in views &#x27;</span> + dirs);\n      err.view = view;\n      <span class=\"hljs-keyword\">return</span> done(err);\n    }\n\n    <span class=\"hljs-comment\">// prime the cache</span>\n    <span class=\"hljs-keyword\">if</span> (renderOptions.cache) {\n      cache[name] = view;\n    }\n  }\n\n  <span class=\"hljs-comment\">// render</span>\n  tryRender(view, renderOptions, done);\n};\n\n<span class=\"hljs-comment\">/**\n * Listen for connections.\n *\n * A node `http.Server` is returned, with this\n * application (which is a `Function`) as its\n * callback. If you wish to create both an HTTP\n * and HTTPS server you may do so with the &quot;http&quot;\n * and &quot;https&quot; modules as shown here:\n *\n *    var http = require(&#x27;http&#x27;)\n *      , https = require(&#x27;https&#x27;)\n *      , express = require(&#x27;express&#x27;)\n *      , app = express();\n *\n *    http.createServer(app).listen(80);\n *    https.createServer({ ... }, app).listen(443);\n *\n * <span class=\"hljs-doctag\">@return</span> {http.Server}\n * <span class=\"hljs-doctag\">@public</span>\n */</span>\n\napp.listen = function listen() {\n  <span class=\"hljs-keyword\">var</span> server = http.createServer(<span class=\"hljs-keyword\">this</span>);\n  <span class=\"hljs-keyword\">return</span> server.listen.apply(server, arguments);\n};\n\n<span class=\"hljs-comment\">/**\n * Log error using console.error.\n *\n * <span class=\"hljs-doctag\">@param</span> {Error} err\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\nfunction logerror(err) {\n  <span class=\"hljs-comment\">/* istanbul ignore next */</span>\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">this</span>.<span class=\"hljs-keyword\">get</span>(<span class=\"hljs-string\">&#x27;env&#x27;</span>) !== <span class=\"hljs-string\">&#x27;test&#x27;</span>) console.error(err.stack || err.toString());\n}\n\n<span class=\"hljs-comment\">/**\n * Try rendering a view.\n * <span class=\"hljs-doctag\">@private</span>\n */</span>\n\nfunction tryRender(view, options, callback) {\n  <span class=\"hljs-keyword\">try</span> {\n    view.render(options, callback);\n  } <span class=\"hljs-keyword\">catch</span> (err) {\n    callback(err);\n  }\n}\n",
    "time": "2021-06-19T15:18:09.010Z"
  },
  {
    "uri": "istomyang/ui",
    "content": "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1><a id=\"user-content-vue-ui-framework\" class=\"anchor\" aria-hidden=\"true\" href=\"#vue-ui-framework\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Vue UI Framework</h1>\n<p><a href=\"https://www.npmjs.com/package/@vue/ui\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/d9d90ea7895e44b95c9f7a8175cb9e4076f7b43e9642c81fde59476330a15868/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f762f407675652f75692e737667\" alt=\"npm\" data-canonical-src=\"https://img.shields.io/npm/v/@vue/ui.svg\" style=\"max-width:100%;\"></a>\n<a href=\"https://vuejs.org/\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/6f2074ea320fe04537f226516235375d56bd50251a10d1f882e9a40a26f24edd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7675652d322e352e31332d627269676874677265656e2e737667\" alt=\"vue2\" data-canonical-src=\"https://img.shields.io/badge/vue-2.5.13-brightgreen.svg\" style=\"max-width:100%;\"></a></p>\n<p>This is a collection of components and styles meant to be used across all official Vue.js apps.</p>\n<h2><a id=\"user-content-installation\" class=\"anchor\" aria-hidden=\"true\" href=\"#installation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Installation</h2>\n<p>Install the <code>@vue/ui</code> package:</p>\n<div class=\"snippet-clipboard-content position-relative\" data-snippet-clipboard-copy-content=\"npm i -S @vue/ui\n\"><pre><code>npm i -S @vue/ui\n</code></pre></div>\n<p>Install the Vue plugin:</p>\n<div class=\"highlight highlight-source-js position-relative\" data-snippet-clipboard-copy-content=\"import Vue from 'vue'\nimport VueUi from '@vue/ui'\n\nVue.use(VueUi)\n\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-v\">Vue</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'vue'</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-v\">VueUi</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@vue/ui'</span>\n\n<span class=\"pl-v\">Vue</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">use</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">VueUi</span><span class=\"pl-kos\">)</span></pre></div>\n<p>Import the CSS:</p>\n<div class=\"highlight highlight-source-js position-relative\" data-snippet-clipboard-copy-content=\"import '@vue/ui/dist/vue-ui.css'\n\"><pre><span class=\"pl-k\">import</span> <span class=\"pl-s\">'@vue/ui/dist/vue-ui.css'</span></pre></div>\n<p><strong>Documentation is Work In Progress</strong></p>\n</article></div>",
    "time": "2021-06-19T15:24:19.937Z"
  },
  {
    "uri": "istomyang/flutter",
    "content": "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1><a id=\"\" class=\"anchor\" aria-hidden=\"true\" href=\"#\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a><a href=\"https://flutter.dev\" rel=\"nofollow\"><img src=\"https://raw.githubusercontent.com/flutter/website/master/src/_assets/image/flutter-lockup-bg.jpg\" alt=\"Flutter logo\" style=\"max-width:100%;\"></a></h1>\n<p><a href=\"https://cirrus-ci.com/github/flutter/flutter/master\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/81cdbbcbcb63254304af7e360603d222db3f5a5a0a60d6dea5a4651d5620adf9/68747470733a2f2f6170692e6369727275732d63692e636f6d2f6769746875622f666c75747465722f666c75747465722e737667\" alt=\"Build Status - Cirrus\" data-canonical-src=\"https://api.cirrus-ci.com/github/flutter/flutter.svg\" style=\"max-width:100%;\"></a>\n<a href=\"https://github.com/flutter/flutter/wiki/Chat\"><img src=\"https://camo.githubusercontent.com/b437c4e4237674e001ea3ee94905bef482bf64329f54f68383f004d21fd9697d/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f363038303134363033333137393336313438\" alt=\"Discord badge\" data-canonical-src=\"https://img.shields.io/discord/608014603317936148\" style=\"max-width:100%;\"></a>\n<a href=\"https://twitter.com/intent/follow?screen_name=flutterdev\" rel=\"nofollow\"><img src=\"https://camo.githubusercontent.com/c11446e195aede06f9fdbf0fc0775456c963abd3331d0f5e62122a47f3bb8f0d/68747470733a2f2f696d672e736869656c64732e696f2f747769747465722f666f6c6c6f772f666c75747465726465762e7376673f7374796c653d736f6369616c266c6162656c3d466f6c6c6f77\" alt=\"Twitter handle\" data-canonical-src=\"https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;label=Follow\" style=\"max-width:100%;\"></a></p>\n<p>Flutter is Google's SDK for crafting beautiful, fast user experiences for\nmobile, web, and desktop from a single codebase. Flutter works with existing\ncode, is used by developers and organizations around the world, and is free\nand open source.</p>\n<h2><a id=\"user-content-documentation\" class=\"anchor\" aria-hidden=\"true\" href=\"#documentation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Documentation</h2>\n<ul>\n<li><a href=\"https://flutter.dev/get-started/\" rel=\"nofollow\">Install Flutter</a></li>\n<li><a href=\"https://flutter.dev/docs\" rel=\"nofollow\">Flutter documentation</a></li>\n<li><a href=\"https://github.com/flutter/flutter/wiki\">Development wiki</a></li>\n<li><a href=\"https://github.com/flutter/flutter/blob/master/CONTRIBUTING.md\">Contributing to Flutter</a></li>\n</ul>\n<p>For announcements about new releases and breaking changes, follow the\n<a href=\"https://groups.google.com/forum/#!forum/flutter-announce\" rel=\"nofollow\">flutter-announce@googlegroups.com</a>\nmailing list or see the\n<a href=\"https://flutter.dev/docs/release/breaking-changes\" rel=\"nofollow\">breaking changes</a> page.</p>\n<h2><a id=\"user-content-about-flutter\" class=\"anchor\" aria-hidden=\"true\" href=\"#about-flutter\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>About Flutter</h2>\n<p>We think Flutter will help you create beautiful, fast apps, with a productive,\nextensible and open development model.</p>\n<h3><a id=\"user-content-beautiful-user-experiences\" class=\"anchor\" aria-hidden=\"true\" href=\"#beautiful-user-experiences\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Beautiful user experiences</h3>\n<p>We want to enable designers to deliver their full creative vision without being\nforced to water it down due to limitations of the underlying framework.\nFlutter's <a href=\"https://flutter.dev/docs/resources/inside-flutter\" rel=\"nofollow\">layered architecture</a> gives you control over every pixel on the\nscreen and its powerful compositing capabilities let you overlay and animate\ngraphics, video, text, and controls without limitation. Flutter includes a full\n<a href=\"https://flutter.dev/widgets/\" rel=\"nofollow\">set of widgets</a> that deliver pixel-perfect experiences on both\niOS and Android.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/flutter/website/blob/master/src/images/homepage/reflectly-hero-600px.png\"><img src=\"https://github.com/flutter/website/raw/master/src/images/homepage/reflectly-hero-600px.png\" alt=\"Reflectly hero image\" style=\"max-width:100%;\"></a></p>\n<h3><a id=\"user-content-fast-results\" class=\"anchor\" aria-hidden=\"true\" href=\"#fast-results\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Fast results</h3>\n<p>Flutter is fast. It's powered by the same hardware-accelerated 2D graphics\nlibrary that underpins Chrome and Android: <a href=\"https://skia.org/\" rel=\"nofollow\">Skia</a>. We architected Flutter to\nsupport glitch-free, jank-free graphics at the native speed of your device.\nFlutter code is powered by the world-class <a href=\"https://dart.dev/\" rel=\"nofollow\">Dart platform</a>, which enables\ncompilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well\nas JavaScript for the web and Intel x64 for desktop devices.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/flutter/website/blob/master/src/images/homepage/dart-diagram-small.png\"><img src=\"https://github.com/flutter/website/raw/master/src/images/homepage/dart-diagram-small.png\" alt=\"Dart platform diagram\" style=\"max-width:100%;\"></a></p>\n<h3><a id=\"user-content-productive-development\" class=\"anchor\" aria-hidden=\"true\" href=\"#productive-development\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Productive development</h3>\n<p>Flutter offers stateful hot reload, allowing you to make changes to your code\nand see the results instantly without restarting your app or losing its state.</p>\n<p><a href=\"https://flutter.dev/docs/development/tools/hot-reload\" rel=\"nofollow\"><img src=\"https://raw.githubusercontent.com/flutter/website/master/src/_assets/image/tools/android-studio/hot-reload.gif\" alt=\"Hot reload animation\" style=\"max-width:100%;\"></a></p>\n<h3><a id=\"user-content-extensible-and-open-model\" class=\"anchor\" aria-hidden=\"true\" href=\"#extensible-and-open-model\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Extensible and open model</h3>\n<p>Flutter works with any development tool (or none at all) but includes editor\nplug-ins for both <a href=\"https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter\" rel=\"nofollow\">Visual Studio Code</a> and <a href=\"https://plugins.jetbrains.com/plugin/9212-flutter\" rel=\"nofollow\">IntelliJ / Android Studio</a>. Flutter\nprovides <a href=\"https://pub.dev/flutter\" rel=\"nofollow\">thousands of packages</a> to speed your development,\nregardless of your target platform. And accessing other native code is easy,\nwith support for both <a href=\"https://flutter.dev/docs/development/platform-integration/c-interop\" rel=\"nofollow\">FFI</a> and <a href=\"https://flutter.dev/docs/development/platform-integration/platform-channels\" rel=\"nofollow\">platform-specific APIs</a>.</p>\n<p>Flutter is a fully open-source project, and we welcome contributions.\nInformation on how to get started can be found at our\n<a href=\"CONTRIBUTING.md\">contributor guide</a>.</p>\n</article></div>",
    "time": "2021-06-19T15:24:28.203Z"
  },
  {
    "uri": "istomyang/gallery",
    "content": "<div id=\"readme\" class=\"md\" data-path=\"README.md\"><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\"><h1><a id=\"user-content-flutter-gallery\" class=\"anchor\" aria-hidden=\"true\" href=\"#flutter-gallery\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Flutter Gallery</h1>\n<p>Flutter Gallery is a resource to help developers evaluate and use Flutter.\nIt is a collection of Material Design &amp; Cupertino widgets, behaviors, and vignettes\nimplemented with Flutter. We often get asked how one can see Flutter in action,\nand this gallery demonstrates what Flutter provides and how it behaves in the\nwild.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/6655696/73928238-0d7fcc80-48d3-11ea-8a7e-ea7dc5d6e713.png\"><img src=\"https://user-images.githubusercontent.com/6655696/73928238-0d7fcc80-48d3-11ea-8a7e-ea7dc5d6e713.png\" alt=\"Flutter Gallery\" style=\"max-width:100%;\"></a></p>\n<h2><a id=\"user-content-running-flutter-gallery-on-flutters-master-channel\" class=\"anchor\" aria-hidden=\"true\" href=\"#running-flutter-gallery-on-flutters-master-channel\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Running Flutter Gallery on Flutter's master channel</h2>\n<p>The Flutter Gallery targets Flutter's master channel. As such, it can take advantage\nof new SDK features that haven't landed in the stable channel.</p>\n<p>If you'd like to run the Flutter Gallery, make sure to switch to the master channel\nfirst:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"flutter channel master\nflutter upgrade\n\"><pre>flutter channel master\nflutter upgrade</pre></div>\n<p>When you're done, use this command to return to the safety of the stable\nchannel:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"flutter channel stable\nflutter upgrade\n\"><pre>flutter channel stable\nflutter upgrade</pre></div>\n<h2><a id=\"user-content-supported-platforms\" class=\"anchor\" aria-hidden=\"true\" href=\"#supported-platforms\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Supported Platforms</h2>\n<p>Flutter Gallery has been built to support multiple platforms.\nThis includes:</p>\n<ul>\n<li>Android</li>\n<li>iOS</li>\n<li>web</li>\n<li>macOS</li>\n<li>Linux</li>\n<li>Windows</li>\n</ul>\n<p>An APK, macOS, Linux, and Windows builds are available for <a href=\"https://github.com/flutter/gallery/releases\">download</a>. You can find it on the web at <a href=\"https://gallery.flutter.dev/\" rel=\"nofollow\">gallery.flutter.dev</a> and on the <a href=\"https://play.google.com/store/apps/details?id=io.flutter.demo.gallery\" rel=\"nofollow\">Google Play Store</a>.</p>\n<p>You can build from source yourself for any of these platforms, though, please note desktop support must <a href=\"https://github.com/flutter/flutter/wiki/Desktop-shells#tooling\">be enabled</a>. For\nexample, to run the app on Windows:</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"cd gallery/\nflutter config --enable-windows-desktop\nflutter create .\nflutter run -d windows\n\"><pre><span class=\"pl-c1\">cd</span> gallery/\nflutter config --enable-windows-desktop\nflutter create <span class=\"pl-c1\">.</span>\nflutter run -d windows</pre></div>\n<p>Additionally, the UI adapts between mobile and desktop layouts regardless of the\nplatform it runs on. This is determined based on window size as outlined in\n<a href=\"lib/layout/adaptive.dart\">adaptive.dart</a>.</p>\n<h2><a id=\"user-content-to-include-a-new-splash-animation\" class=\"anchor\" aria-hidden=\"true\" href=\"#to-include-a-new-splash-animation\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>To include a new splash animation</h2>\n<ol>\n<li>\n<p>Convert your animation to a <code>.gif</code> file.\nIdeally, use a background color of <code>0xFF030303</code> to ensure the animation\nblends into the background of the app.</p>\n</li>\n<li>\n<p>Add your new <code>.gif</code> file to the assets directory under\n<code>assets/splash_effects</code>. Ensure the name follows the format\n<code>splash_effect_$num.gif</code>. The number should be the next number after the\ncurrent largest number in the repository.</p>\n</li>\n<li>\n<p>Update the map <code>_effectDurations</code> in\n<a href=\"lib/pages/splash.dart\">splash.dart</a> to include the number of the\nnew <code>.gif</code> as well as its estimated duration. The duration is used to\ndetermine how long to display the splash animation at launch.</p>\n</li>\n</ol>\n<h2><a id=\"user-content-generating-localizations\" class=\"anchor\" aria-hidden=\"true\" href=\"#generating-localizations\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Generating localizations</h2>\n<p>If this is the first time building the Flutter gallery, the localized\ncode will not be present in the project directory. However, after running\nthe application for the first time, a synthetic package will be generated\ncontaining the app's localizations through importing\n<code>package:flutter_gen/gen_l10n/</code>.</p>\n<p>See separate <a href=\"lib/l10n/README.md\">README</a> for more details.</p>\n<h2><a id=\"user-content-generating-highlighted-code-segments\" class=\"anchor\" aria-hidden=\"true\" href=\"#generating-highlighted-code-segments\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Generating highlighted code segments</h2>\n<p>To generate highlighted code segments, make sure that you\nhave <a href=\"https://pub.dev/packages/grinder\" rel=\"nofollow\">grinder</a> installed by running</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"flutter pub get\n\"><pre>flutter pub get</pre></div>\n<p>To generate code segments (see separate <a href=\"tool/codeviewer_cli/README.md\">README</a> for\nmore details):</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"flutter pub run grinder update-code-segments\n\"><pre>flutter pub run grinder update-code-segments</pre></div>\n<h2><a id=\"user-content-creating-a-new-release-for-flutter-org-members\" class=\"anchor\" aria-hidden=\"true\" href=\"#creating-a-new-release-for-flutter-org-members\"><svg class=\"octicon octicon-link\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z\"></path></svg></a>Creating a new release (for Flutter org members)</h2>\n<ol>\n<li>\n<p>Create a PR to bump the version number up in <code>pubspec.yaml</code>. Use <a href=\"https://semver.org/\" rel=\"nofollow\">semantic versioning</a> to determine\nwhich number to increment. The version number after the <code>+</code>should also be incremented. For example <code>1.2.3+010203</code>\nwith a patch should become <code>1.2.4+010204</code>.</p>\n</li>\n<li>\n<p>Create a tag on master branch after the version bump PR is merged. This will start a\nGithub Actions job that will draft a release with desktop applications\nand apk included.</p>\n<div class=\"highlight highlight-source-shell position-relative\" data-snippet-clipboard-copy-content=\"git pull upstream master\ngit tag v1.2.3\ngit push upstream v1.2.3\n\"><pre>git pull upstream master\ngit tag v1.2.3\ngit push upstream v1.2.3</pre></div>\n</li>\n<li>\n<p>Publish the firebase hosted web release.</p>\n<ul>\n<li>Log in to the account that has write access to <code>gallery-flutter-dev</code> with <code>firebase login</code></li>\n<li><code>flutter pub run grinder build-web</code></li>\n<li><code>firebase deploy -P prod</code> to deploy to production (equivalent to <code>firebase deploy</code>).</li>\n<li><code>firebase deploy -P staging</code> to deploy to staging. Check with the team to see if the staging\ninstance is currently used for a special purpose.</li>\n</ul>\n</li>\n<li>\n<p>Write some release notes about what changes have been done since the\nlast release.</p>\n</li>\n<li>\n<p>Publish the Android release</p>\n<ul>\n<li>Ensure you have the correct signing certificates.</li>\n<li>Create the app bundle with <code>flutter build appbundle</code>.</li>\n<li>Include the release notes in \"What's new\".</li>\n<li>Upload to the Play store console and publish.</li>\n</ul>\n</li>\n<li>\n<p>Go to <a href=\"https://github.com/flutter/gallery/releases\">Releases</a> and see the latest draft.</p>\n<ul>\n<li>Include the release notes in the description.</li>\n<li>Publish the release.</li>\n</ul>\n</li>\n</ol>\n</article></div>",
    "time": "2021-06-19T15:26:42.631Z"
  },
  {
    "uri": "/repos/istomyang/flutter/git/blobs/3cff47944ab4852cde4be87f2eb44bd81d0254cf",
    "content": "<span class=\"hljs-section\"># [<span class=\"hljs-string\">![Flutter logo</span>][<span class=\"hljs-symbol\"></span>]][<span class=\"hljs-symbol\">flutter.dev</span>]</span>\n\n[<span class=\"hljs-string\">![Build Status - Cirrus</span>][<span class=\"hljs-symbol\"></span>]][<span class=\"hljs-symbol\">Build status</span>]\n[<span class=\"hljs-string\">![Gitter Channel</span>][<span class=\"hljs-symbol\"></span>]][<span class=\"hljs-symbol\">Gitter badge</span>]\n[<span class=\"hljs-string\">![Twitter handle</span>][<span class=\"hljs-symbol\"></span>]][<span class=\"hljs-symbol\">Twitter badge</span>]\n\nFlutter is Google&#x27;s SDK for crafting beautiful, fast user experiences for\nmobile, web, and desktop from a single codebase. Flutter works with existing\ncode, is used by developers and organizations around the world, and is free\nand open source.\n\n<span class=\"hljs-section\">## Documentation</span>\n\n<span class=\"hljs-bullet\">*</span> [<span class=\"hljs-string\">Install Flutter</span>](<span class=\"hljs-link\">https://flutter.dev/get-started/</span>)\n<span class=\"hljs-bullet\">*</span> [<span class=\"hljs-string\">Flutter documentation</span>](<span class=\"hljs-link\">https://flutter.dev/docs</span>)\n<span class=\"hljs-bullet\">*</span> [<span class=\"hljs-string\">Development wiki</span>](<span class=\"hljs-link\">https://github.com/flutter/flutter/wiki</span>)\n<span class=\"hljs-bullet\">*</span> [<span class=\"hljs-string\">Contributing to Flutter</span>](<span class=\"hljs-link\">https://github.com/flutter/flutter/blob/master/CONTRIBUTING.md</span>)\n\nFor announcements about new releases and breaking changes, follow the\n[<span class=\"hljs-string\">flutter-announce@googlegroups.com</span>](<span class=\"hljs-link\">https://groups.google.com/forum/#!forum/flutter-announce</span>)\nmailing list.\n\n<span class=\"hljs-section\">## About Flutter</span>\n\nWe think Flutter will help you create beautiful, fast apps, with a productive,\nextensible and open development model.\n\n<span class=\"hljs-section\">### Beautiful user experiences</span>\n\nWe want to enable designers to deliver their full creative vision without being\nforced to water it down due to limitations of the underlying framework.\nFlutter&#x27;s [layered architecture] gives you control over every pixel on the\nscreen and its powerful compositing capabilities let you overlay and animate\ngraphics, video, text, and controls without limitation. Flutter includes a full\n[<span class=\"hljs-string\">set of widgets</span>][<span class=\"hljs-symbol\">widget catalog</span>] that deliver pixel-perfect experiences on both\niOS and Android.\n\n![<span class=\"hljs-string\">Reflectly hero image</span>][<span class=\"hljs-symbol\">Reflectly hero image</span>]\n\n<span class=\"hljs-section\">### Fast results</span>\n\nFlutter is fast. It&#x27;s powered by the same hardware-accelerated 2D graphics\nlibrary that underpins Chrome and Android: [Skia]. We architected Flutter to\nsupport glitch-free, jank-free graphics at the native speed of your device.\nFlutter code is powered by the world-class [Dart platform], which enables\ncompilation to 32-bit and 64-bit ARM machine code for iOS and Android, as well\nas JavaScript for the web and Intel x64 for desktop devices.\n\n![<span class=\"hljs-string\">Dart platform diagram</span>][<span class=\"hljs-symbol\"></span>]\n\n<span class=\"hljs-section\">### Productive development</span>\n\nFlutter offers stateful hot reload, allowing you to make changes to your code\nand see the results instantly without restarting your app or losing its state.\n\n[<span class=\"hljs-string\">![Hot reload animation</span>][<span class=\"hljs-symbol\"></span>]][<span class=\"hljs-symbol\">Hot reload</span>]\n\n<span class=\"hljs-section\">### Extensible and open model</span>\n\nFlutter works with any development tool (or none at all) but includes editor\nplug-ins for both [Visual Studio Code] and [IntelliJ / Android Studio]. Flutter\nprovides [<span class=\"hljs-string\">thousands of packages</span>][<span class=\"hljs-symbol\">Flutter packages</span>] to speed your development,\nregardless of your target platform. And accessing other native code is easy,\nwith support for both [<span class=\"hljs-string\">FFI</span>] and [<span class=\"hljs-string\">platform-specific APIs</span>][<span class=\"hljs-symbol\">platform channels</span>].\n\nFlutter is a fully open-source project, and we welcome contributions.\nInformation on how to get started can be found at our\n[<span class=\"hljs-string\">contributor guide</span>](<span class=\"hljs-link\">CONTRIBUTING.md</span>).\n\n[<span class=\"hljs-symbol\">Flutter logo</span>]: <span class=\"hljs-link\">https://raw.githubusercontent.com/flutter/website/master/src/_assets/image/flutter-lockup.png</span>\n[<span class=\"hljs-symbol\">flutter.dev</span>]: <span class=\"hljs-link\">https://flutter.dev</span>\n[<span class=\"hljs-symbol\">Build Status - Cirrus</span>]: <span class=\"hljs-link\">https://api.cirrus-ci.com/github/flutter/flutter.svg</span>\n[<span class=\"hljs-symbol\">Build status</span>]: <span class=\"hljs-link\">https://cirrus-ci.com/github/flutter/flutter/master</span>\n[<span class=\"hljs-symbol\">Gitter Channel</span>]: <span class=\"hljs-link\">https://badges.gitter.im/flutter/flutter.svg</span>\n[<span class=\"hljs-symbol\">Gitter badge</span>]: <span class=\"hljs-link\">https://gitter.im/flutter/flutter?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge</span>\n[<span class=\"hljs-symbol\">Twitter handle</span>]: <span class=\"hljs-link\">https://img.shields.io/twitter/follow/flutterdev.svg?style=social&amp;label=Follow</span>\n[<span class=\"hljs-symbol\">Twitter badge</span>]: <span class=\"hljs-link\">https://twitter.com/intent/follow?screen_name=flutterdev</span>\n[<span class=\"hljs-symbol\">layered architecture</span>]: <span class=\"hljs-link\">https://flutter.dev/docs/resources/inside-flutter</span>\n[<span class=\"hljs-symbol\">widget catalog</span>]: <span class=\"hljs-link\">https://flutter.dev/widgets/</span>\n[<span class=\"hljs-symbol\">Reflectly hero image</span>]: <span class=\"hljs-link\">https://github.com/flutter/website/blob/master/src/images/homepage/reflectly-hero-600px.png</span>\n[<span class=\"hljs-symbol\">Skia</span>]: <span class=\"hljs-link\">https://skia.org/</span>\n[<span class=\"hljs-symbol\">Dart platform</span>]: <span class=\"hljs-link\">https://dart.dev/</span>\n[<span class=\"hljs-symbol\">Dart platform diagram</span>]: <span class=\"hljs-link\">https://github.com/flutter/website/blob/master/src/images/homepage/dart-diagram-small.png</span>\n[<span class=\"hljs-symbol\">Hot reload animation</span>]: <span class=\"hljs-link\">https://raw.githubusercontent.com/flutter/website/master/src/_assets/image/tools/android-studio/hot-reload.gif</span>\n[<span class=\"hljs-symbol\">Hot reload</span>]: <span class=\"hljs-link\">https://flutter.dev/docs/development/tools/hot-reload</span>\n[<span class=\"hljs-symbol\">Visual Studio Code</span>]: <span class=\"hljs-link\">https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter</span>\n[<span class=\"hljs-symbol\">IntelliJ / Android Studio</span>]: <span class=\"hljs-link\">https://plugins.jetbrains.com/plugin/9212-flutter</span>\n[<span class=\"hljs-symbol\">Flutter packages</span>]: <span class=\"hljs-link\">https://pub.dev/flutter</span>\n[<span class=\"hljs-symbol\">FFI</span>]: <span class=\"hljs-link\">https://flutter.dev/docs/development/platform-integration/c-interop</span>\n[<span class=\"hljs-symbol\">platform channels</span>]: <span class=\"hljs-link\">https://flutter.dev/docs/development/platform-integration/platform-channels</span>\n[<span class=\"hljs-symbol\">interop example</span>]: <span class=\"hljs-link\">https://github.com/flutter/flutter/tree/master/examples/platform_channel</span>\n",
    "time": "2021-06-21T09:01:55.301Z"
  },
  {
    "uri": "/repos/istomyang/flutter/git/blobs/96f8599b93c7423508594dff4862e9b7f352311f",
    "content": "@<span class=\"hljs-built_in\">ECHO</span> off\n<span class=\"hljs-comment\">REM Copyright 2014 The Flutter Authors. All rights reserved.</span>\n<span class=\"hljs-comment\">REM Use of this source code is governed by a BSD-style license that can be</span>\n<span class=\"hljs-comment\">REM found in the LICENSE file.</span>\n<span class=\"hljs-comment\">\nREM ---------------------------------- NOTE ----------------------------------</span>\n<span class=\"hljs-comment\">REM</span>\n<span class=\"hljs-comment\">REM Please keep the logic in this file consistent with the logic in the</span>\n<span class=\"hljs-comment\">REM `dart` script in the same directory to ensure that Flutter &amp; Dart continue to</span>\n<span class=\"hljs-comment\">REM work across all platforms!</span>\n<span class=\"hljs-comment\">REM</span>\n<span class=\"hljs-comment\">REM --------------------------------------------------------------------------</span>\n\n<span class=\"hljs-built_in\">SETLOCAL</span> ENABLEDELAYEDEXPANSION\n\n<span class=\"hljs-keyword\">FOR</span> <span class=\"hljs-variable\">%%i</span> <span class=\"hljs-keyword\">IN</span> (&quot;%~dp0..&quot;) <span class=\"hljs-keyword\">DO</span> <span class=\"hljs-built_in\">SET</span> FLUTTER_ROOT=<span class=\"hljs-variable\">%%~</span>fi\n<span class=\"hljs-comment\">\nREM Include shared scripts in shared.bat</span>\n<span class=\"hljs-built_in\">SET</span> shared_bin=<span class=\"hljs-variable\">%FLUTTER_ROOT%</span>/bin/internal/shared.bat\n<span class=\"hljs-keyword\">CALL</span> &quot;<span class=\"hljs-variable\">%shared_bin%</span>&quot;\n\n<span class=\"hljs-built_in\">SET</span> cache_dir=<span class=\"hljs-variable\">%FLUTTER_ROOT%</span>\\bin\\cache\n<span class=\"hljs-built_in\">SET</span> dart_sdk_path=<span class=\"hljs-variable\">%cache_dir%</span>\\dart-sdk\n<span class=\"hljs-built_in\">SET</span> dart=<span class=\"hljs-variable\">%dart_sdk_path%</span>\\bin\\dart.exe\n<span class=\"hljs-comment\">\nREM Chaining the call to &#x27;dart&#x27; and &#x27;exit&#x27; with an ampersand ensures that</span>\n<span class=\"hljs-comment\">REM Windows reads both commands into memory once before executing them. This</span>\n<span class=\"hljs-comment\">REM avoids nasty errors that may otherwise occur when the dart command (e.g. as</span>\n<span class=\"hljs-comment\">REM part of &#x27;flutter upgrade&#x27;) modifies this batch script while it is executing.</span>\n<span class=\"hljs-comment\">REM</span>\n<span class=\"hljs-comment\">REM Do not use the CALL command in the next line to execute Dart. CALL causes</span>\n<span class=\"hljs-comment\">REM Windows to re-read the line from disk after the CALL command has finished</span>\n<span class=\"hljs-comment\">REM regardless of the ampersand chain.</span>\n&quot;<span class=\"hljs-variable\">%dart%</span>&quot; %* &amp; <span class=\"hljs-keyword\">exit</span> /B <span class=\"hljs-variable\">!ERRORLEVEL!</span>\n",
    "time": "2021-06-21T12:32:01.410Z"
  },
  {
    "uri": "/repos/istomyang/flutter/git/blobs/88bec71868dc07bb5946af62e90f411bb885ae63",
    "content": "<span class=\"hljs-comment\">// Copyright 2014 The Flutter Authors. All rights reserved.</span>\n<span class=\"hljs-comment\">// Use of this source code is governed by a BSD-style license that can be</span>\n<span class=\"hljs-comment\">// found in the LICENSE file.</span>\n\n<span class=\"hljs-comment\">/// The Flutter animation system.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// To use, import `package:flutter/animation.dart`.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// This library provides basic building blocks for implementing animations in</span>\n<span class=\"hljs-comment\">/// Flutter. Other layers of the framework use these building blocks to provide</span>\n<span class=\"hljs-comment\">/// advanced animation support for applications. For example, the widget library</span>\n<span class=\"hljs-comment\">/// includes [ImplicitlyAnimatedWidget]s and [AnimatedWidget]s that make it easy</span>\n<span class=\"hljs-comment\">/// to animate certain properties of a [Widget]. If those animated widgets are</span>\n<span class=\"hljs-comment\">/// not sufficient for a given use case, the basic building blocks provided by</span>\n<span class=\"hljs-comment\">/// this library can be used to implement custom animated effects.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// This library depends only on core Dart libraries and the `physics.dart`</span>\n<span class=\"hljs-comment\">/// library.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// ### Foundations: the Animation class</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// Flutter represents an animation as a value that changes over a given</span>\n<span class=\"hljs-comment\">/// duration, and that value may be of any type. For example, it could be a</span>\n<span class=\"hljs-comment\">/// [double] indicating the current opacity of a [Widget] as it fades out. Or,</span>\n<span class=\"hljs-comment\">/// it could be the current background [Color] of a widget that transitions</span>\n<span class=\"hljs-comment\">/// smoothly from one color to another. The current value of an animation is</span>\n<span class=\"hljs-comment\">/// represented by an [Animation] object, which is the central class of the</span>\n<span class=\"hljs-comment\">/// animation library. In addition to the current animation value, the</span>\n<span class=\"hljs-comment\">/// [Animation] object also stores the current [AnimationStatus]. The status</span>\n<span class=\"hljs-comment\">/// indicates whether the animation is currently conceptually running from the</span>\n<span class=\"hljs-comment\">/// beginning to the end or the other way around. It may also indicate that the</span>\n<span class=\"hljs-comment\">/// animation is currently stopped at the beginning or the end.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// Other objects can register listeners on an [Animation] to be informed</span>\n<span class=\"hljs-comment\">/// whenever the animation value and/or the animation status changes. A [Widget]</span>\n<span class=\"hljs-comment\">/// may register such a *value* listener via [Animation.addListener] to rebuild</span>\n<span class=\"hljs-comment\">/// itself with the current animation value whenever that value changes. For</span>\n<span class=\"hljs-comment\">/// example, a widget might listen to an animation to update its opacity to the</span>\n<span class=\"hljs-comment\">/// animation&#x27;s value every time that value changes. Likewise, registering a</span>\n<span class=\"hljs-comment\">/// *status* listener via [Animation.addStatusListener] may be useful to trigger</span>\n<span class=\"hljs-comment\">/// another action when the current animation has ended.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// As an example, the following video shows the changes over time in the</span>\n<span class=\"hljs-comment\">/// current animation status and animation value for the opacity animation of a</span>\n<span class=\"hljs-comment\">/// widget. This [Animation] is driven by an [AnimationController] (see next</span>\n<span class=\"hljs-comment\">/// section). Before the animation triggers, the animation status is &quot;dismissed&quot;</span>\n<span class=\"hljs-comment\">/// and the value is 0.0. As the value runs from 0.0 to 1.0 to fade in the</span>\n<span class=\"hljs-comment\">/// widget, the status changes to &quot;forward&quot;. When the widget is fully faded in</span>\n<span class=\"hljs-comment\">/// at an animation value of 1.0 the status is &quot;completed&quot;. When the animation</span>\n<span class=\"hljs-comment\">/// triggers again to fade the widget back out, the animation status changes to</span>\n<span class=\"hljs-comment\">/// &quot;reverse&quot; and the animation value runs back to 0.0. At that point the widget</span>\n<span class=\"hljs-comment\">/// is fully faded out and the animation status switches back to &quot;dismissed&quot;</span>\n<span class=\"hljs-comment\">/// until the animation is triggered again.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// {@animation 420 100 https://flutter.github.io/assets-for-api-docs/assets/animation/animation_status_value.mp4}</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// Although you can&#x27;t instantiate [Animation] directly (it is an abstract</span>\n<span class=\"hljs-comment\">/// class), you can create one using an [AnimationController].</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// ### Powering animations: AnimationController</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// An [AnimationController] is a special kind of [Animation] that advances its</span>\n<span class=\"hljs-comment\">/// animation value whenever the device running the application is ready to</span>\n<span class=\"hljs-comment\">/// display a new frame (typically, this rate is around 60 values per second).</span>\n<span class=\"hljs-comment\">/// An [AnimationController] can be used wherever an [Animation] is expected. As</span>\n<span class=\"hljs-comment\">/// the name implies, an [AnimationController] also provides control over its</span>\n<span class=\"hljs-comment\">/// [Animation]: It implements methods to stop the animation at any time and to</span>\n<span class=\"hljs-comment\">/// run it forward as well as in the reverse direction.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// By default, an [AnimationController] increases its animation value linearly</span>\n<span class=\"hljs-comment\">/// over the given duration from 0.0 to 1.0 when run in the forward direction.</span>\n<span class=\"hljs-comment\">/// For many use cases you might want the value to be of a different type,</span>\n<span class=\"hljs-comment\">/// change the range of the animation values, or change how the animation moves</span>\n<span class=\"hljs-comment\">/// between values. This is achieved by wrapping the animation: Wrapping it in</span>\n<span class=\"hljs-comment\">/// an [Animatable] (see below) changes the range of animation values to a</span>\n<span class=\"hljs-comment\">/// different range or type (for example to animate [Color]s or [Rect]s).</span>\n<span class=\"hljs-comment\">/// Furthermore, a [Curve] can be applied to the animation by wrapping it in a</span>\n<span class=\"hljs-comment\">/// [CurvedAnimation]. Instead of linearly increasing the animation value, a</span>\n<span class=\"hljs-comment\">/// curved animation changes its value according to the provided curve. The</span>\n<span class=\"hljs-comment\">/// framework ships with many built-in curves (see [Curves]). As an example,</span>\n<span class=\"hljs-comment\">/// [Curves.easeOutCubic] increases the animation value quickly at the beginning</span>\n<span class=\"hljs-comment\">/// of the animation and then slows down until the target value is reached:</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// {@animation 464 192 https://flutter.github.io/assets-for-api-docs/assets/animation/curve_ease_out_cubic.mp4}</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// ### Animating different types: Animatable</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// An `Animatable&lt;T&gt;` is an object that takes an `Animation&lt;double&gt;` as input</span>\n<span class=\"hljs-comment\">/// and produces a value of type `T`. Objects of these types can be used to</span>\n<span class=\"hljs-comment\">/// translate the animation value range of an [AnimationController] (or any</span>\n<span class=\"hljs-comment\">/// other [Animation] of type [double]) to a different range. That new range</span>\n<span class=\"hljs-comment\">/// doesn&#x27;t even have to be of type double anymore. With the help of an</span>\n<span class=\"hljs-comment\">/// [Animatable] like a [Tween] or a [TweenSequence] (see sections below) an</span>\n<span class=\"hljs-comment\">/// [AnimationController] can be used to smoothly transition [Color]s, [Rect]s,</span>\n<span class=\"hljs-comment\">/// [Size]s and many more types from one value to another over a given duration.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// ### Interpolating values: Tweens</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// A [Tween] is applied to an [Animation] of type [double] to change the</span>\n<span class=\"hljs-comment\">/// range and type of the animation value. For example, to transition the</span>\n<span class=\"hljs-comment\">/// background of a [Widget] smoothly between two [Color]s, a [ColorTween] can</span>\n<span class=\"hljs-comment\">/// be used. Each [Tween] specifies a start and an end value. As the animation</span>\n<span class=\"hljs-comment\">/// value of the [Animation] powering the [Tween] progresses from 0.0 to 1.0 it</span>\n<span class=\"hljs-comment\">/// produces interpolated values between its start and end value. The values</span>\n<span class=\"hljs-comment\">/// produced by the [Tween] usually move closer and closer to its end value as</span>\n<span class=\"hljs-comment\">/// the animation value of the powering [Animation] approaches 1.0.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// The following video shows example values produced by an [IntTween], a</span>\n<span class=\"hljs-comment\">/// `Tween&lt;double&gt;`, and a [ColorTween] as the animation value runs from 0.0 to</span>\n<span class=\"hljs-comment\">/// 1.0 and back to 0.0:</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// {@animation 530 150 https://flutter.github.io/assets-for-api-docs/assets/animation/tweens.mp4}</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// An [Animation] or [AnimationController] can power multiple [Tween]s. For</span>\n<span class=\"hljs-comment\">/// example, to animate the size and the color of a widget in parallel, create</span>\n<span class=\"hljs-comment\">/// one [AnimationController] that powers a [SizeTween] and a [ColorTween].</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// The framework ships with many [Tween] subclasses ([IntTween], [SizeTween],</span>\n<span class=\"hljs-comment\">/// [RectTween], etc.) to animate common properties.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// ### Staggered animations: TweenSequences</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// A [TweenSequence] can help animate a given property smoothly in stages. Each</span>\n<span class=\"hljs-comment\">/// [Tween] in the sequence is responsible for a different stage and has an</span>\n<span class=\"hljs-comment\">/// associated weight. When the animation runs, the stages execute one after</span>\n<span class=\"hljs-comment\">/// another. For example, let&#x27;s say you want to animate the background of a</span>\n<span class=\"hljs-comment\">/// widget from yellow to green and then, after a short pause, to red. For this</span>\n<span class=\"hljs-comment\">/// you can specify three tweens within a tween sequence: One [ColorTween]</span>\n<span class=\"hljs-comment\">/// animating from yellow to green, one [ConstantTween] that just holds the color</span>\n<span class=\"hljs-comment\">/// green, and another [ColorTween] animating from green to red. For each</span>\n<span class=\"hljs-comment\">/// tween you need to pick a weight indicating the ratio of time spent on that</span>\n<span class=\"hljs-comment\">/// tween compared to all other tweens. If we assign a weight of 2 to both of</span>\n<span class=\"hljs-comment\">/// the [ColorTween]s and a weight of 1 to the [ConstantTween] the transition</span>\n<span class=\"hljs-comment\">/// described by the [ColorTween]s would take twice as long as the</span>\n<span class=\"hljs-comment\">/// [ConstantTween]. A [TweenSequence] is driven by an [Animation] just like a</span>\n<span class=\"hljs-comment\">/// regular [Tween]: As the powering [Animation] runs from 0.0 to 1.0 the</span>\n<span class=\"hljs-comment\">/// [TweenSequence] runs through all of its stages.</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// The following video shows the animation described in the previous paragraph:</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// {@animation 646 250 https://flutter.github.io/assets-for-api-docs/assets/animation/tween_sequence.mp4}</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">/// See also:</span>\n<span class=\"hljs-comment\">///</span>\n<span class=\"hljs-comment\">///  * [Introduction to animations](https://flutter.dev/docs/development/ui/animations)</span>\n<span class=\"hljs-comment\">///    on flutter.dev.</span>\n<span class=\"hljs-comment\">///  * [Animations tutorial](https://flutter.dev/docs/development/ui/animations/tutorial)</span>\n<span class=\"hljs-comment\">///    on flutter.dev.</span>\n<span class=\"hljs-comment\">///  * [Sample app](https://github.com/flutter/samples/tree/master/animations),</span>\n<span class=\"hljs-comment\">///    which showcases Flutter&#x27;s animation features.</span>\n<span class=\"hljs-comment\">///  * [ImplicitlyAnimatedWidget] and its subclasses, which are [Widget]s that</span>\n<span class=\"hljs-comment\">///    implicitly animate changes to their properties.</span>\n<span class=\"hljs-comment\">///  * [AnimatedWidget] and its subclasses, which are [Widget]s that take an</span>\n<span class=\"hljs-comment\">///    explicit [Animation] to animate their properties.</span>\n<span class=\"hljs-keyword\">library</span> animation;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/animation.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/animation_controller.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/animations.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/curves.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/listener_helpers.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/tween.dart&#x27;</span>;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-string\">&#x27;src/animation/tween_sequence.dart&#x27;</span>;\n",
    "time": "2021-06-21T12:32:22.020Z"
  }
]